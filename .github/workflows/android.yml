name: Android CI

on:
  push:
    branches:
      - main
      - "release-branch/*"
  pull_request:
    # all PRs on all branches

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Switch to Java 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Clean
        run: make clean

      # Build dependencies first
      - name: Generate tailscale.version
        run: make tailscale.version
      - name: Build libtailscale AAR
        run: make libtailscale

      # Build APKs
      - name: Build Debug APK
        if: ${{ github.ref == 'refs/heads/main' || github.event_name == 'pull_request' }}
        run: make tailscale-debug.apk
      - name: Build Release APK
        if: ${{ github.ref != 'refs/heads/main' && github.event_name != 'pull_request' }}
        run: make tailscale-release.apk

      - name: Run tests
        run: make test

      # Upload artifacts for debugging
      - name: Upload Debug APK Artifact
        if: ${{ github.ref == 'refs/heads/main' || github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: tailscale-debug.apk
          retention-days: 7
      - name: Upload Release APK Artifact
        if: ${{ github.ref != 'refs/heads/main' && github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: tailscale-release.apk
          retention-days: 30

      # Get version info
      - name: Get version info
        id: version
        run: |
          VERSION=$(grep VERSION_LONG tailscale.version | cut -d'=' -f2 | tr -d '"')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "short_sha=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT

      # Create Release for main branch (Debug APK)
      - name: Create Debug Release
        if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: debug-latest
          name: "Debug Build (Latest)"
          files: |
            tailscale-debug.apk
            android/libs/libtailscale.aar
          prerelease: true
          body: |
            Debug build from main branch
            Commit: ${{ github.sha }}
            Version: ${{ steps.version.outputs.version }}

      # Create Release for other branches (Release APK)
      - name: Create Release Build
        if: ${{ github.ref != 'refs/heads/main' && github.event_name != 'pull_request' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ steps.version.outputs.version }}-${{ steps.version.outputs.short_sha }}
          name: "Release ${{ steps.version.outputs.version }}"
          files: |
            tailscale-release.apk
            android/libs/libtailscale.aar
          body: |
            Release build
            Version: ${{ steps.version.outputs.version }}
            Commit: ${{ github.sha }}
            Branch: ${{ github.ref_name }}
